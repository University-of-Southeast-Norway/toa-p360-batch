# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: 
- feature/*
- task/*
- bug/*
- issue/*
- dev/*

pool:
  vmImage: ubuntu-latest

variables:
  solution: '**/dfo_toa_manual.sln'
  mainProject: 'DfoToa.BatchRun'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: build

  jobs:
  - job: buildAndTest
    displayName: 'Build and test project'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 6 Core sdk'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
        includePreviewVersions: true
    - task: NuGetToolInstaller@1

    - task: CmdLine@2
      displayName: 'Copy _general.example.json to _general.json'
      inputs:
        script: cp $(Build.SourcesDirectory)/$(mainProject)/JSON/_general.example.json $(Build.SourcesDirectory)/$(mainProject)/JSON/_general.json

    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        projects: '$(solution)'
        command: 'restore'
        selectOrConfig: config
        nugetConfigPath: '$(Build.SourcesDirectory)/nuget.config'
        verbosityRestore: normal

    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        projects: '$(solution)'
        command: 'build'
        arguments: '--no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: test
        projects: '**/*.UnitTest.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: CopyFiles@2
      displayName: 'Copy artifacts to staging directory'
      inputs:
        contents: |
          $(mainProject)/bin/**/?(*.exe|*.dll|*.exe.config)
        targetFolder: $(Build.ArtifactStagingDirectory)/output
        flattenFolders: true

    - task: CopyFiles@2
      displayName: 'Copy _general.example.json to staging directory'
      inputs:
        contents: |
          $(mainProject)/JSON/_general.example.json
        targetFolder: $(Build.ArtifactStagingDirectory)/output/JSON
        flattenFolders: true

    - task: CopyFiles@2
      displayName: 'Copy Definitions folder to staging directory'
      inputs:
        contents: |
          $(mainProject)/**/Definitions/*.*
        targetFolder: $(Build.ArtifactStagingDirectory)/output/Definitions
        flattenFolders: true
        
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)/output
        ArtifactName: artifacts.linux.feature.$(Build.BuildNumber)
      displayName: 'Publish artifacts'
